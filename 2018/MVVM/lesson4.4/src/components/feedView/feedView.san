<template>
  <ul class='s-feed'>
    <!--
    item: Object {
      title: String
      time: String
      media: Array {
        type: Number
        urls: Array
      }
    }
    -->
    <slot s-if="!data"></slot>
    <s-item s-if="data"
            s-for="item in filterData"
            class="feed-item"
            data="{{item}}"/>
  </ul>
</template>

<script>
  import sItem from './feedItem.san'

  import { throttle } from "../../assets/script/utils";

  export default {
    name: "s-feed",
    components: {
      's-item': sItem
    },
    initData() {
      return {
        wSize: {
          MAX_Height: screen.availHeight
        },
        windowPosition: {
          top: 0,
          bottom: 0
        },
        domPosition: {
          top: 0,
          bottom: 0
        }
      }
    },
    attached() {
      // feedEl.style.cssText = `
      // max-height: ${this.data.get('wSize.MAX_Height') - 50}px;
      // overflow-y: auto;
      // `
      let itemEl = document.querySelector('.feed-item')
      this.data.set('itemHeight', itemEl.clientHeight)
      window.addEventListener('scroll', throttle(() => {
        let pageYOffset = window.pageYOffset
        let windowHeight = window.innerHeight
        let bodyHeight = document.body.scrollHeight
        let itemEl = this.ref('feeditem')
        let itemHeight = itemEl.clientHeight
        console.log(pageYOffset + windowHeight, bodyHeight, itemHeight)
        if (pageYOffset + windowHeight >= bodyHeight - 200) {
          this.fire('scrolledbottom', pageYOffset)
        }
      }, 100))
    },
    computed: {
      filterData() {
        let data = this.data.get('data')
        let len = data.length
        let screenNum = window.innerHeight / this.data.get('itemHeight')
        return data.splice(screenNum - 10, len)
      }
    }
    // custom function

  }
</script>

<style scoped lang='less'>
  .s-feed {

  }
</style>